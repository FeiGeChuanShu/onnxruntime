jobs:
- job: BinarySizeChecks
  timeoutInMinutes: 120
  workspace:
    clean: all
  pool: Linux-CPU-2019

  variables:
    test_data_directory: $(Build.SourcesDirectory)/.test_data

  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - task: CmdLine@2
    displayName: Create test data directory
    inputs:
      script: |
        # Create a folder for all test data
        mkdir -p $(test_data_directory)
        # create empty config used in some parts
        touch $(test_data_directory)/include_no_operators.config
      workingDirectory: $(Build.SourcesDirectory)

  - template: templates/get-docker-image-steps.yml
    parameters:
      Dockerfile: tools/ci_build/github/linux/docker/Dockerfile.manylinux2014_cpu
      Context: tools/ci_build/github/linux/docker
      DockerBuildArgs: "--build-arg BUILD_UID=$( id -u )"
      Repository: onnxruntimecpubuild

  - task: CmdLine@2
    displayName: 5a. Build onnxruntime minimal baseline for Android arm64-v8a
    inputs:
      script: |
        NDK_HOME=$(realpath $ANDROID_NDK_HOME)
        docker run --rm \
          --volume $(Build.SourcesDirectory):/onnxruntime_src \
          --volume $(Build.BinariesDirectory):/build \
          --volume $ANDROID_HOME:/android_home \
          --volume $NDK_HOME:/ndk_home \
          --volume $(test_data_directory):/home/onnxruntimedev/.test_data \
          -e ALLOW_RELEASED_ONNX_OPSET_ONLY=1 \
          -e NIGHTLY_BUILD \
          -e BUILD_BUILDNUMBER \
          -e BUILD_SOURCEVERSION=$(Build.SourceVersion) \
          -e BUILD_ID=$(Build.BuildId) \
          -e BUILD_REASON=$(Build.Reason) \
          -e BUILD_BRANCH=$(Build.SourceBranch) \
          onnxruntimecpubuild \
            /bin/bash /onnxruntime_src/tools/ci_build/github/linux/ort_minimal/build_minimal_ort_android_baseline_and_report_bin_size.sh \
              /build/5a
      workingDirectory: $(Build.SourcesDirectory)

  - task: AzureCLI@2
    displayName: 5a. Publish binary size data
    condition: and(succeededOrFailed(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      azureSubscription: AIInfraBuild
      scriptLocation: inlineScript
      scriptType: bash
      inlineScript: |
        BINARY_SIZE_DATA_FILE="$(Build.BinariesDirectory)/5a/MinSizeRel/binary_size_data.txt"
        if [[ ! -f "${BINARY_SIZE_DATA_FILE}" ]]; then
          echo "File not found: ${BINARY_SIZE_DATA_FILE}"
          exit 1
        fi
        /usr/bin/python3 $(Build.SourcesDirectory)/tools/ci_build/github/windows/post_binary_sizes_to_dashboard.py \
          --commit_hash=$(Build.SourceVersion) \
          --size_data_file="${BINARY_SIZE_DATA_FILE}" \
          --build_project=onnxruntime \
          --build_id=$(Build.BuildId)
      workingDirectory: '$(Build.BinariesDirectory)'

  - task: PublishPipelineArtifact@1
    displayName: 5a. Publish binary artifact
    inputs:
      targetPath: $(Build.BinariesDirectory)/5a/MinSizeRel/libonnxruntime.so
      artifactName: AndroidMinimalBaselineBinary

  - task: CmdLine@2
    displayName: 5b. Build onnxruntime minimal baseline for Android arm64-v8a with debug info
    inputs:
      script: |
        NDK_HOME=$(realpath $ANDROID_NDK_HOME)
        docker run --rm \
          --volume $(Build.SourcesDirectory):/onnxruntime_src \
          --volume $(Build.BinariesDirectory):/build \
          --volume $ANDROID_HOME:/android_home \
          --volume $NDK_HOME:/ndk_home \
          --volume $(test_data_directory):/home/onnxruntimedev/.test_data \
          -e ALLOW_RELEASED_ONNX_OPSET_ONLY=1 \
          -e NIGHTLY_BUILD \
          -e BUILD_BUILDNUMBER \
          -e BUILD_SOURCEVERSION=$(Build.SourceVersion) \
          -e BUILD_ID=$(Build.BuildId) \
          -e BUILD_REASON=$(Build.Reason) \
          -e BUILD_BRANCH=$(Build.SourceBranch) \
          onnxruntimecpubuild \
            /bin/bash /onnxruntime_src/tools/ci_build/github/linux/ort_minimal/build_minimal_ort_android_baseline_and_report_bin_size.sh \
              /build/5b --cmake_extra_defines ADD_DEBUG_INFO_TO_MINIMAL_BUILD=ON
      workingDirectory: $(Build.SourcesDirectory)

  - task: PublishPipelineArtifact@1
    displayName: 5b. Publish binary artifact
    inputs:
      targetPath: $(Build.BinariesDirectory)/5b/MinSizeRel/libonnxruntime.so
      artifactName: AndroidMinimalBaselineDebugBinary

  - task: PublishTestResults@2
    displayName: 'Publish unit test results'
    inputs:
      testResultsFiles: '**/*.results.xml'
      searchFolder: '$(Build.BinariesDirectory)'
      testRunTitle: 'Unit Test Run'
    condition: succeededOrFailed()

  - template: templates/component-governance-component-detection-steps.yml
    parameters:
      condition: 'succeeded'

  - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
    displayName: 'Clean Agent Directories'
    condition: always()
